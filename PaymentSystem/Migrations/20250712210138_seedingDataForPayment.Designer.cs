// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentSystem.Data;

#nullable disable

namespace PaymentSystem.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250712210138_seedingDataForPayment")]
    partial class seedingDataForPayment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentSystem.Data.Entities.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            ID = 7,
                            Amount = 200m,
                            PaymentDate = new DateTime(2025, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 4
                        },
                        new
                        {
                            ID = 8,
                            Amount = 6000m,
                            PaymentDate = new DateTime(2025, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 6
                        });
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.PaymentDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MethodID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MethodID");

                    b.HasIndex("PaymentID")
                        .IsUnique();

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 5,
                            Email = "armanbabayan@gmail.com",
                            FirstName = "Arman",
                            LastName = "Babayan"
                        },
                        new
                        {
                            ID = 6,
                            Email = "hasmikmartirosyan@gmail.com",
                            FirstName = "Hasmik",
                            LastName = "Martirosyan"
                        });
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.UserRelation", b =>
                {
                    b.Property<int>("FirstUserId")
                        .HasColumnType("int");

                    b.Property<int>("SecondUserId")
                        .HasColumnType("int");

                    b.Property<string>("RelationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirstUserId", "SecondUserId");

                    b.HasIndex("SecondUserId");

                    b.ToTable("UserRelations");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.Payment", b =>
                {
                    b.HasOne("PaymentSystem.Data.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.PaymentDetail", b =>
                {
                    b.HasOne("PaymentSystem.Data.Entities.PaymentMethod", "Method")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("MethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentSystem.Data.Entities.Payment", "Payment")
                        .WithOne("PaymentDetail")
                        .HasForeignKey("PaymentSystem.Data.Entities.PaymentDetail", "PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.UserRelation", b =>
                {
                    b.HasOne("PaymentSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("FirstUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PaymentSystem.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("SecondUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.Payment", b =>
                {
                    b.Navigation("PaymentDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.PaymentMethod", b =>
                {
                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("PaymentSystem.Data.Entities.User", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
